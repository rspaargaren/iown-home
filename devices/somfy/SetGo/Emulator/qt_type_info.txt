
-------------------------------------------------
--- class PodConfig
--- Signals:
0 - protected: void SIGNAL_BootloaderDisconnected()
1 - protected: void SIGNAL_BootloaderDisconnectedDuringUpgrade()
2 - protected: void SIGNAL_ErrorDuringUpgrade()
3 - protected: void SIGNAL_OneDeviceIsConnected(Device* _pDeviceArg)
4 - protected: void SIGNAL_OneDeviceIsDisconnected(Device* _pDeviceArg)
5 - protected: void SIGNAL_StartInApplicationMode()
6 - protected: void SIGNAL_StartInBootloaderMode()
7 - protected: void SIGNAL_UpgradeInProgress(int arg)
8 - protected: void SIGNAL_UpgradeCompleted()
9 - protected: void SIGNAL_UpdatePodNeeded()
--- Slots:
10 - public:    void SLOT_BootloaderConnected(BootloaderDevice* oBootloaderDeviceArg)
11 - public:    void SLOT_BootloaderDisconnected(BootloaderDevice* oBootloaderDeviceArg)
12 - public:    void SLOT_ErrorDuringConnection(Device* _pDeviceArg)
13 - public:    void SLOT_ErrorDuringUpgrade()
14 - public:    void SLOT_IoPlugConnected(IoPlug* oIoPlugDeviceArg)
15 - public:    void SLOT_IoPlugDisconnected(IoPlug* oIoPlugDeviceArg)
16 - public:    void SLOT_RemovingFile()
17 - public:    void SLOT_UpgradeInProgress(int arg)
18 - public:    void SLOT_UpgradeCompleted()
19 - public:    void AbortUpgrade()
20 - public:    void ReStartUpgrade()
21 - public:    void RestartInApplicationMode()
22 - public:    void StartUpgrade()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class MainFrame
--- Signals:
0 - protected: void deviceDisconnected()
--- Slots:
1 - public:    void updateIoPlugSoft()
2 - public:    void rebuildLists()
3 - public:    void rebuildEquipmentList()
4 - public:    void rebuildBoxesList()
5 - public:    void updateRepeaterSensorBoxFrameSize()
6 - private:   void selectLanguage()
7 - private:   void retranslate()
8 - private:   void showLicense()
9 - private:   void createIoPlugConnection()
10 - private:   void checkIoPlugDetected()
11 - private:   void checkIoPlugUpdateNeed()
12 - private:   void showIntroduction()
13 - private:   void restorePageIndex()
14 - private:   void updateContext()
15 - private:   void fullRepaint()
16 - private:   void on_btnPage1_clicked()
17 - private:   void on_btnPage2_clicked()
18 - private:   void on_btnPage3_clicked()
19 - private:   void on_btnPage4_clicked()
20 - private:   void on_btnPage5_clicked()
21 - private:   void lvwPageCountChanged(int _pageCount)
22 - private:   void lvwPageChanged(int _currentPageIndex)
23 - private:   void lvwSelectionChanged(QItemSelection _selected, QItemSelection _deselected)
24 - private:   void lvwRepeaterSelectionChanged(QItemSelection _selected, QItemSelection _deselected)
25 - private:   void sortAlpha()
26 - private:   void sortFam()
27 - private:   void sortSel()
28 - private:   void sortSet()
29 - private:   void sortNone()
30 - private:   void on_btnHelp_clicked()
31 - private:   void on_chkAll_clicked(bool _checked)
32 - private:   void on_chkShowRepeater_clicked(bool _checked)
33 - private:   void updateShowRepeaterTooltip()
34 - private:   void on_chkShowSensorBox_clicked(bool _checked)
35 - private:   void updateShowSensorBoxTooltip()
36 - private:   void on_btnItemIcon_clicked(QModelIndex _index)
37 - private:   void on_btnItemDelete_clicked(QModelIndex _index)
38 - private:   void on_btnItemSet_clicked(QModelIndex _index)
39 - private:   void on_btnItemInfo_clicked(QModelIndex _index)
40 - private:   void on_item_clicked(QModelIndex _index)
41 - private:   void on_btnRepeaterItemDelete_clicked(QModelIndex _index)
42 - private:   void on_btnSensorBoxItemDelete_clicked(QModelIndex _index)
43 - private:   void on_btnSensorBoxItemWarning_clicked(QModelIndex _index)
44 - private:   void on_btnSensorBoxItemInfo_clicked(QModelIndex _index)
45 - private:   void onDeviceConnected()
46 - private:   void onDeviceDisconnected(LocalController::TeRadioStatus _radioStatus)
47 - private:   void onBootLoaderDeviceDisconnected()
48 - private:   void onUpgradingDeviceDisconnected()
49 - private:   void onLocalControllerTimeOutElapsed()
50 - private:   void acceptQuitConfirmDialog()
51 - private:   void askForAllEquipmentsPowerCut()
52 - private:   void askForDeviceConnection()
53 - private:   void showLowPowerResumeMessage()
54 - private:   void ioPlugStartInApplicationMode()
55 - private:   void ioPlugStartInBootloaderMode()
56 - private:   void applicationUpdateNeeded()
57 - private:   void closeWinkIndicator()
58 - private:   void keyPressEvent(QKeyEvent* event)
--- Other Methods:
--- Properties:
0 - QString appName
    flags: Readable | Designable | Scriptable | Stored | ResolveEditable
1 - QString appVer
    flags: Readable | Designable | Scriptable | Stored | ResolveEditable
2 - QString appVerFull
    flags: Readable | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class MainFrameOper
--- Signals:
--- Slots:
0 - public:    void doAutoscan()
1 - public:    void doAutoscanNewOnly()
2 - public:    void doManageUncompletedInstall()
3 - public:    void doAddCtrl()
4 - public:    void doAddTahoma()
5 - public:    void doTrsfEquipment()
6 - public:    void doTrsfPedestrianEquipment()
7 - public:    void doTrsfRepeaters()
8 - public:    void doEditInfoEndProduct(EndProduct* _pProduct)
9 - public:    void doSetReAdjustEndProduct(EndProduct* _pProduct)
10 - public:    void doExportProductsData(bool _bAllProducts)
11 - public:    void playVideo(QString _videoFolder, QString _videoFile, QString _videoFileEN)
12 - public:    bool doSelfLearningForAccessProducts(EndProduct* _pProduct)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WindowTitleBar
--- Signals:
--- Slots:
0 - public:    void minimized()
1 - public:    void maximized()
2 - public:    void quit()
3 - public:    void help()
4 - public:    void selectLanguage()
5 - public:    void showHideIoAddr()
6 - public:    void aboutSoft()
7 - public:    void showLicence()
8 - public:    void onShowSqcMenu()
9 - public:    void exportData()
10 - public:    void exportAll()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WindowButton
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class RoundedMenu
--- Signals:
--- Slots:
0 - public:    void prepareMenu()
1 - public:    void releaseMenu()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AppSettings
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class StyledMessageBox
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WarningMessageBox
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ListViewEquipment : ListViewHScroll
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class EquipmentItemDelegate
--- Signals:
0 - protected: void btnItemDelete_clicked(QModelIndex _index)
1 - protected: void btnItemIcon_clicked(QModelIndex _index)
2 - protected: void btnItemSet_clicked(QModelIndex _index)
3 - protected: void btnItemInfo_clicked(QModelIndex _index)
4 - protected: void item_clicked(QModelIndex _index)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ListViewRepeater : ListViewHScroll
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class RepeaterItemDelegate
--- Signals:
0 - protected: void btnItemDelete_clicked(QModelIndex _index)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ListViewSensorBox : ListViewHScroll
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SensorBoxItemDelegate
--- Signals:
0 - protected: void btnItemDelete_clicked(QModelIndex _index)
1 - protected: void btnItemWarning_clicked(QModelIndex _index)
2 - protected: void btnItemInfo_clicked(QModelIndex _index)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class MenuButtonCover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SortByAlpha
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SortByFamily
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SortBySel
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SortBySet
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgSplash
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgLicense
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelp
--- Signals:
--- Slots:
0 - public:    int exec()
1 - public:    void startAnimation()
2 - public:    void stopAnimation()
3 - private:   void on_btnHelp_clicked()
4 - private:   void on_btn1_clicked()
5 - private:   void on_btn2_clicked()
6 - private:   void on_btn3_clicked()
7 - private:   void on_btn4_clicked()
8 - private:   void on_btn5_clicked()
9 - private:   void on_btn6_clicked()
10 - private:   void on_btn7_clicked()
11 - private:   void on_btn8_clicked()
12 - private:   void blinkLight()
13 - private:   void blinkDark()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic : DlgShaded
--- Signals:
--- Slots:
0 - protected: void on_btnOk_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic1 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic2 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic3 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic4 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic5 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic6 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic7 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHelpTopic8 : DlgHelpTopic
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgMask
--- Signals:
--- Slots:
0 - public:    void show()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - public:    void done(int r)
2 - public:    void hide()
3 - public:    void keyPressEvent(QKeyEvent* _event)
4 - public:    void keyReleaseEvent(QKeyEvent* _event)
5 - public:    void closeEvent(QCloseEvent* _event)
6 - public:    void restartDisplayTimer()
7 - public:    void abortDisplayTimer()
8 - public:    bool minDisplayTimeReached()
9 - protected: void delayedDone()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgSelectLang : DlgShaded
--- Signals:
--- Slots:
0 - public:    void chkBoxStateChanged(int _state)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgWaiting : DlgShaded
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgInfoRecovery : DlgWaiting
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void InstallerInfosRecovered(TeActuatorActionStatus _eActuatorActionStatusArg)
2 - protected: void SLOT_SecurityQuit()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgInfo : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - private:   void completeInit()
2 - private:   void on_btnValidate_clicked()
3 - private:   void on_btnCancel_clicked()
4 - private:   void on_btnRefresh_clicked()
5 - private:   void on_btnMoreData_clicked()
6 - private:   void on_btnPage1_clicked()
7 - private:   void on_btnPage2_clicked()
8 - private:   void on_btnPage3_clicked()
9 - private:   void on_btnPage4_clicked()
10 - private:   void on_btnPage5_clicked()
11 - private:   void on_btnLeftLeft_clicked()
12 - private:   void on_btnLeft_clicked()
13 - private:   void on_btnRight_clicked()
14 - private:   void on_btnRightRight_clicked()
15 - private:   void on_pagesInfo_currentChanged(int _index)
16 - private:   void on_btnEquipName_clicked()
17 - private:   void on_edEquipName_textEdited(QString _text)
18 - private:   void on_btnInstallFirm_clicked()
19 - private:   void on_edInstallFirm_textEdited(QString _text)
20 - private:   void on_btnInstallDate_clicked()
21 - private:   void on_edInstallDay_textEdited(QString _text)
22 - private:   void on_edInstallMonth_textEdited(QString _text)
23 - private:   void on_edInstallYear_textEdited(QString _text)
24 - private:   void on_btnFreeInfo_clicked()
25 - private:   void on_txtFreeInfo_textChanged()
26 - private:   void updateContext()
27 - private:   void showMoreData()
28 - private:   void showMoreDataAccess()
29 - private:   void doDiagnostic()
30 - private:   void on_btnDiagnostic_clicked()
31 - private:   void keyPressEvent(QKeyEvent* event)
32 - private:   void SLOT_RequestFinished(QNetworkReply* nwrep)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgInfoSensorPage
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgInfoTransmission : DlgWaiting
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void InstallerInfosTransmitted(TeActuatorActionStatus _status)
2 - protected: void ShowTransmissionFailedWarningDialog()
3 - protected: void SLOT_SecurityEnded()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgShowText : DlgShaded
--- Signals:
--- Slots:
0 - private:   void on_btnClose_clicked()
1 - private:   void on_btnSave_clicked()
2 - private:   void on_btnPrint_clicked()
3 - private:   void doSave()
4 - private:   void doPrint()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgPwd : DlgShaded
--- Signals:
--- Slots:
0 - private:   void on_btnIgnore_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgSubIdentify
--- Signals:
--- Slots:
0 - public:    void on_btnStop_clicked()
1 - protected: void SLOT_ActionCompleted(TeActuatorActionStatus _eActionStatusArg)
2 - private:   void on_btnIdentify_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgIdentify : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - private:   void on_btnStop_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgWarning : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnLeft_clicked()
2 - protected: void on_btnOk_clicked()
3 - protected: void on_btnCancel_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAbout : DlgShaded
--- Signals:
--- Slots:
0 - private:   void on_btnLicense_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTransitWarning : DlgWarning
--- Signals:
--- Slots:
0 - public:    int exec()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTextEntry : DlgShaded
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgProgressBar : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - public:    void setValue(int _value)
2 - public:    void progressBarValueChanged(int _value)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgFirstUseExplain : DlgShaded
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover : DlgShaded
--- Signals:
--- Slots:
0 - protected: void on_btnLeft_clicked()
1 - protected: void on_btnMid_clicked()
2 - protected: void on_btnRight_clicked()
3 - protected: void on_btnNext_clicked()
4 - protected: void on_btnPrev_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverIntro : DlgDiscover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover2wStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - protected: void on_btnNext_clicked()
1 - protected: void on_btnPrev_clicked()
2 - protected: void on_selection_changed(QItemSelection _selected, QItemSelection _deselected)
3 - protected: void on_double_clicked(QModelIndex _index)
4 - protected: void UpdateScrollButtons()
5 - protected: void UpdateOkButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover2wStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void onTimerIndicStop()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover2wStep3 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
2 - protected: void SLOT_DoDiscover2WSystem()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover2wStep4 : DlgDiscover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover2wStep5 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_OneEquipmentDiscovered(qint8 _nProductsCount)
2 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover2wStep6 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnLeft_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverKeyhStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverKeyhStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverKeyhStep3 : DlgDiscover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover1wStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - protected: void on_btnNext_clicked()
1 - protected: void on_btnPrev_clicked()
2 - protected: void on_selection_changed(QItemSelection _selected, QItemSelection _deselected)
3 - protected: void on_double_clicked(QModelIndex _index)
4 - protected: void UpdateScrollButtons()
5 - protected: void UpdateOkButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover1wStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void onTimerIndicStop()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover1wStep3 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_OneEquipmentDiscovered(qint8 _nProductsCount)
2 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscover1wStep4 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverCheckList : DlgDiscover
--- Signals:
--- Slots:
0 - protected: void on_btnNext_clicked()
1 - protected: void on_btnPrev_clicked()
2 - protected: void on_selection_changed(QItemSelection _selected, QItemSelection _deselected)
3 - protected: void on_double_clicked(QModelIndex _index)
4 - protected: void UpdateScrollButtons()
5 - protected: void UpdateOkButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverNewStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_OneEquipmentDiscovered(qint8 _nProductsCount)
2 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverNewStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverNewStep3 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnLeft_clicked()
2 - protected: void on_btnRight_clicked()
3 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
4 - protected: void on_btnNext_clicked()
5 - protected: void on_btnPrev_clicked()
6 - protected: void on_selection_changed(QItemSelection _selected, QItemSelection _deselected)
7 - protected: void on_btnItemDelete_clicked(QModelIndex _index)
8 - protected: void on_btnItemIcon_clicked(QModelIndex _index)
9 - protected: void on_double_clicked(QModelIndex _index)
10 - protected: void UpdateScrollButtons()
11 - protected: void UpdateOkButton()
12 - protected: void RebuildNewEquipmentList()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverNewStep4 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverNewStep5 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnRight_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverSecurCheckStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_OneEquipmentDiscovered(qint8 _nProductsCount)
2 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDiscoverSecurCheckStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAddCtrlStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - protected: void on_btnNext_clicked()
1 - protected: void on_btnPrev_clicked()
2 - protected: void on_selection_changed(QItemSelection _selected, QItemSelection _deselected)
3 - protected: void on_double_clicked(QModelIndex _index)
4 - protected: void UpdateScrollButtons()
5 - protected: void UpdateOkButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAddCtrlStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAddCtrlStep3 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAddCtrlStep4 : DlgDiscover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAddTahomaStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAddTahomaStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgAddTahomaStep3 : DlgDiscover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfEquipStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnLeft_clicked()
2 - protected: void on_btnNext_clicked()
3 - protected: void on_btnPrev_clicked()
4 - protected: void on_selection_changed(QItemSelection _selected, QItemSelection _deselected)
5 - protected: void on_double_clicked(QModelIndex _index)
6 - protected: void UpdateScrollButtons()
7 - protected: void UpdateOkButton()
8 - protected: void SLOT_ReadyForTransfer()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfEquipStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - public:    void on_btnLeft_clicked()
2 - public:    void on_btnRight_clicked()
3 - protected: void SLOT_ReadyForTransfer()
4 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfEquipStep3 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnRight_clicked()
2 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
3 - protected: void SLOT_AnimationDone()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfEquipStep3bis : DlgDiscover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfEquipStep4 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfRepeaterStep1 : DlgDiscover
--- Signals:
--- Slots:
0 - protected: void on_btnNext_clicked()
1 - protected: void on_btnPrev_clicked()
2 - protected: void on_selection_changed(QItemSelection _selected, QItemSelection _deselected)
3 - protected: void on_double_clicked(QModelIndex _index)
4 - protected: void UpdateScrollButtons()
5 - protected: void UpdateOkButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfRepeaterStep2 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfRepeaterStep3 : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgTrsfRepeaterStep4 : DlgDiscover
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgUpdateIoPlug : DlgDiscover
--- Signals:
--- Slots:
0 - public:    int exec()
1 - public:    void setProgressValue(int _value)
2 - public:    void progressBarValueChanged(int _value)
3 - protected: void ioPlugUpgradeCompleted()
4 - protected: void ioPlugUpgradeErrorOccured()
5 - protected: void ioPlugDisconnected()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDevDcnx : DlgWarning
--- Signals:
--- Slots:
0 - public:    int exec()
1 - public:    void onDeviceConnected()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgRemovingKey : DlgWaiting
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgWarningList : DlgShaded
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ListViewHScroll
--- Signals:
0 - protected: void pageCountChanged(int _pageCount)
1 - protected: void pageChanged(int _currentPageIndex)
--- Slots:
2 - public:    void scrollRightOneItem()
3 - public:    void scrollLeftOneItem()
4 - public:    void scrollRightOnePage()
5 - public:    void scrollLeftOnePage()
6 - public:    void scrollToBeginning()
7 - public:    void scrollToEnd()
8 - public:    void scrollToPage(int _pageIndex)
9 - private:   void horizontalScrollbarRangeChanged(int _min, int _max)
10 - private:   void horizontalScrollbarActionTriggered(int _action)
--- Other Methods:
--- Properties:
0 - QSize itemSize
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ListViewProductFamily : ListViewHScroll
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ProductFamilyItemDelegate
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ListViewNewEquipment : ListViewHScroll
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class NewEquipmentItemDelegate
--- Signals:
0 - protected: void btnItemDelete_clicked(QModelIndex _index)
1 - protected: void btnItemIcon_clicked(QModelIndex _index)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WidgetWaves
--- Signals:
0 - protected: void animationLoopBack()
--- Slots:
1 - public:    void startAnimation()
2 - public:    void stopAnimation()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WidgetWavesSending
--- Signals:
--- Slots:
0 - public:    void startAnimation()
1 - public:    void stopAnimation()
2 - private:   void on_waves_LoopingBack()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ListViewRemoteControl : ListViewHScroll
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class RemoteControlItemDelegate
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SettingsDialogBase : DlgShaded
--- Signals:
0 - protected: void closeClicked()
1 - protected: void previousClicked()
2 - protected: void nextClicked()
3 - protected: void quitConfirmed()
--- Slots:
4 - public:    void setPageTitleVisible(bool visible)
5 - public:    void setDialogTitle(QString title)
6 - public:    void setCloseEnabled(bool enabled)
7 - public:    void gatewayPageCancelled()
8 - public:    void checkAndCloseSettingsDialog()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SettingsPageState : StateBase
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SettingsWizard
--- Signals:
0 - protected: void aboutToEmitPreviousClicked()
1 - protected: void previousClicked()
2 - protected: void aboutToEmitNextClicked()
3 - protected: void nextClicked()
--- Slots:
4 - private:   void onStateEntered()
5 - private:   void onStateExited()
6 - private:   void slotPreviousClicked()
7 - private:   void slotNextClicked()
8 - private:   void onTimeToBlink()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GatewayPageState : SettingsPageState
--- Signals:
0 - protected: void accepted()
1 - protected: void rejected()
--- Slots:
2 - private:   void onAccepted()
3 - private:   void entrySelected()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgCaution : DlgShaded
--- Signals:
0 - protected: void acceptButtonClicked()
1 - protected: void rejectButtonClicked()
--- Slots:
2 - public:    void enableRejectButton()
3 - public:    void disableRejectButton()
4 - public:    void startAnimation()
5 - public:    void stopAnimation()
6 - protected: void rejectButtonFadeIn()
7 - protected: void rejectButtonFadeOut()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SendingCommandState : SettingsPageState
--- Signals:
0 - protected: void stopped()
--- Slots:
1 - public:    void setTitle(QString title)
2 - public:    void setComment(QString comment)
3 - public:    void setIcon(QString iconBase)
4 - public:    void setIconDescription(QString description)
5 - private:   void stop()
6 - private:   void toggleStopButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class CommandSuccessState : SettingsPageState
--- Signals:
0 - protected: void timeout()
--- Slots:
1 - public:    void setTitle(QString title)
2 - public:    void setComment(QString comment)
3 - public:    void setIcon(QString iconBase)
4 - public:    void setIconDescription(QString description)
5 - protected: void launchAutoscanNew()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class CommandState
--- Signals:
--- Slots:
0 - public:    void setEndLimitAutoIconContext()
1 - private:   void recordSendingTime()
2 - private:   void startSendingTimer()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GroupState : SettingsPageState
--- Signals:
0 - protected: void next()
1 - protected: void previous()
2 - protected: void AutoSelectedWithSpecialCase()
--- Slots:
3 - private:   void radioButtonClicked(int buttonId)
4 - private:   void nextClicked()
5 - private:   void previousClicked()
6 - private:   void validateButtonClicked()
7 - private:   void validationDone(TeActuatorActionStatus status)
8 - private:   void validationError(TeSettingActionNotExecute)
9 - private:   void updateButtonsStatus()
10 - private:   void onActionCompleted(TeActuatorActionStatus status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ModeSelectionState : SettingsPageState
--- Signals:
0 - protected: void AutoSelectedWithSpecialCase()
1 - protected: void autoSelected()
2 - protected: void autoSelectedSC()
3 - protected: void manualSelected()
4 - protected: void semiAutoUpSelected()
5 - protected: void semiAutoUpSelectedSC()
6 - protected: void semiAutoDownSelected()
7 - protected: void xTimeDone()
--- Slots:
8 - private:   void nextClicked()
9 - private:   void previousClicked()
10 - private:   void enableNextButton()
11 - private:   void restart()
12 - private:   void autoXTimeActuatorResponse(TeActuatorActionStatus status)
13 - private:   void autoActuatorResponse(TeActuatorActionStatus status)
14 - private:   void semiAutoUpActuatorResponse(TeActuatorActionStatus status)
15 - private:   void endOfXTime()
16 - private:   void blockActuatorSignals()
17 - private:   void unblockActuatorSignals()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AppSelectionState : SettingsPageState
--- Signals:
--- Slots:
0 - public:    void applyActuatorProperty()
1 - public:    void blockActuatorSignals()
2 - public:    void unblockActuatorSignals()
3 - public:    void onActionCompleted(TeActuatorActionStatus _status)
4 - private:   void nextClicked()
5 - private:   void previousClicked()
6 - private:   void enableNextButton()
7 - private:   void disableNextButton()
8 - private:   void buttonClicked()
9 - private:   void validateClicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DeadManBehavior
--- Signals:
0 - protected: void pressed(quint8 index)
1 - protected: void released()
--- Slots:
2 - private:   void onTimeout()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ActuatorActionTransition
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
[0]
error: property index out of range
-------------------------------------------------
-------------------------------------------------
--- class DlgEjectSetting : DlgCaution
--- Signals:
--- Slots:
0 - protected: void startEjectActuatorSetting()
1 - protected: void ejectInProgress()
2 - protected: void ejectDone(TeActuatorActionStatus _arg)
3 - protected: void ejectNotExecute(TeSettingActionNotExecute _arg)
4 - protected: void endOfEject()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class StyledRadioButton
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ButtonGroupWithTab
--- Signals:
0 - protected: void buttonClicked(int id)
--- Slots:
1 - protected: void buttonChecked(bool state)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class MovementSettingWidget
--- Signals:
0 - protected: void SIGNAL_MovementInProgress()
1 - protected: void SIGNAL_MovementEnded()
--- Slots:
2 - protected: void doMoveUp()
3 - protected: void doMoveDown()
4 - protected: void doIncrementPositionToUp()
5 - protected: void doIncrementPositionToDown()
6 - protected: void doReadjustTiltUp()
7 - protected: void doReadjustTiltDown()
8 - protected: void doInvertRotationDirection()
9 - protected: void doVerifyTiltingTravel()
10 - protected: void doSetCurrentPositionAsEndLimitUp()
11 - protected: void doSetCurrentPositionAsEndLimitDown()
12 - protected: void doValidateTilt()
13 - protected: void doUpdatePIPosition()
14 - protected: void doValidateBackImpulse()
15 - protected: void doValidateTiltingTravel_Manu()
16 - protected: void doValidateRunningTravel()
17 - protected: void doStopRotation()
18 - protected: void doStopExecution()
19 - protected: void enableAllButtons()
20 - protected: void checkActionCompleted()
21 - public:    void onActionCompleted(TeActuatorActionStatus _status)
22 - public:    void onDeadManUpReleased()
23 - public:    void onDeadManDownReleased()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AdjustBrightnessWidget
--- Signals:
--- Slots:
0 - protected: void doUpdatePIPosition()
1 - protected: void enableAllButtons()
2 - protected: void checkActionCompleted()
3 - protected: void goToColorPosition(QColor& color)
4 - public:    void onActionCompleted(TeActuatorActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class PositionAngleSettingWidget
--- Signals:
--- Slots:
0 - protected: void doMoveUp()
1 - protected: void doMoveDown()
2 - protected: void doTiltUp()
3 - protected: void doTiltDown()
4 - protected: void doStop()
5 - protected: void doUpdatePIPosition()
6 - protected: void enableAllButtons()
7 - protected: void checkActionCompleted()
8 - public:    void onActionCompleted(TeActuatorActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ValueSettingWidget
--- Signals:
0 - protected: void valueChanged(int value)
1 - protected: void isValid(bool bArg)
--- Slots:
2 - public:    void setValue(int value)
3 - public:    void setInfo(QString sInfo)
4 - public:    void setUnitBis(QString sUnitBis, Qt::Alignment eVerticalAlignement)
5 - public:    void setUnitBis(QString sUnitBis)
6 - public:    void hideValidateButton()
7 - public:    void hideInfoLabel()
8 - public:    void applyValue()
9 - private:   void minusClicked()
10 - private:   void plusClicked()
11 - private:   void checkValue()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DoubleValueSettingWidget
--- Signals:
0 - protected: void valueChanged(double value)
--- Slots:
1 - public:    void setValue(double value)
2 - public:    void setInfo(QString sInfo)
3 - private:   void minusClicked()
4 - private:   void plusClicked()
5 - private:   void checkValue()
6 - private:   void applyValue()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LevelSettingWidget
--- Signals:
0 - protected: void valueChanged(int value)
--- Slots:
1 - public:    void setValue(int value)
2 - public:    void setMinimumValue(int min)
3 - public:    void setMaximumValue(int max)
4 - public:    void setMinimumLabel(QString _sText)
5 - public:    void setMaximumLabel(QString _sText)
6 - private:   void minusClicked()
7 - private:   void plusClicked()
8 - private:   void updateValuePicture()
9 - private:   void checkValue()
10 - private:   void applyValue()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class StandardOperationState : SettingsPageState
--- Signals:
--- Slots:
0 - private:   void blockActuatorSignals()
1 - private:   void unblockActuatorSignals()
2 - private:   void onActionNotExecute(TeSettingActionNotExecute reason)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ButtonShortcutEventFilter
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DialogEventFilter
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ErrorState : SettingsPageState
--- Signals:
0 - protected: void cancel()
1 - protected: void reset()
2 - protected: void restart()
--- Slots:
3 - private:   void acceptButtonClicked()
4 - private:   void rejectButtonClicked()
5 - private:   void unblockActuatorSignals()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class StandardChoiceState : SettingsPageState
--- Signals:
0 - protected: void choiceValidated(int id)
1 - protected: void choiceOneValidated()
2 - protected: void choiceTwoValidated()
3 - protected: void choiceThreeValidated()
4 - protected: void choiceFourValidated()
--- Slots:
5 - public:    void applyActuatorProperty()
6 - public:    void onLinkClicked()
7 - private:   void buttonClicked(int _id)
8 - private:   void buttonClicked()
9 - private:   void validateClicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SettingsStateWaiter
--- Signals:
--- Slots:
0 - public:    void waitPreDelay(int ms)
1 - public:    TeOperationStatus waitForEnterToSet(bool hasKey)
2 - private:   void onActionInProgress()
3 - private:   void onActionCompleted(TeActuatorActionStatus status)
4 - private:   void onActionNotExecute(TeSettingActionNotExecute status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class MotorTypeIdentificationWaiter
--- Signals:
--- Slots:
0 - public:    TeMotorTypeStatus waitForMotorTypeIdentification(bool hasKey)
1 - private:   void onActionInProgress()
2 - private:   void onActionCompleted(TeActuatorActionStatus status)
3 - private:   void onActionNotExecute(TeSettingActionNotExecute status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class CautionDialogState : StateBase
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class StateBase
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class TimedWaitState
--- Signals:
0 - protected: void timeout()
--- Slots:
1 - public:    void recordStartTime()
2 - private:   void startWaitTimer()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class TimeValueSettingWidget
--- Signals:
0 - protected: void valueChanged(int value)
1 - protected: void isValid(bool bArg)
--- Slots:
2 - public:    void setValue(int val)
3 - public:    void setValue(int hourValue, int minuteValue, int secondValue)
4 - public:    void setInfo(QString sInfo)
5 - public:    void setTimeType(TeTimeValueType _eTimeType)
6 - public:    void applyValue()
7 - private:   void updatedValue()
8 - private:   void updateValidators(int hour, int minute, int seconde)
9 - private:   void checkValue()
10 - private:   void updateTimeType()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class EVBTiltingTutorialWidget
--- Signals:
--- Slots:
0 - private:   void playMinus90To90Tutorial()
1 - private:   void play0To90Tutorial()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ProductReroutedSlotsCollection
--- Signals:
--- Slots:
0 - public:    void RestartLastGuiAction()
1 - public:    void invokeMemorizeSettings()
2 - public:    void invokeInvertRotationDirection()
3 - public:    void invokeAutoLearning()
4 - public:    void invokeReadjustFavoritePosition()
5 - public:    void invokeValidateTiltingTravelValue()
6 - public:    void invokeValidateLowSpeedValue()
7 - public:    void invokeValidateNominalSpeedValue()
8 - public:    void invokeValidateSoftStartValue()
9 - public:    void invokeValidateSoftStopValue()
10 - public:    void invokeDeleteFavoritePosition()
11 - public:    void invokeResetActuator()
12 - public:    void invokeResetActuatorWithoutDoublePowerCut()
13 - public:    void invokeSetAutoModeForUpEndLimit()
14 - public:    void invokeSetAutoModeForDownEndLimit()
15 - public:    void invokeSetAutoModeForBothEndLimits()
16 - public:    void invokeValidateBackReleasePosition()
17 - public:    void invokeValidateDownEndLimitAutomaticDetection()
18 - public:    void invokeValidateUpEndLimitAutomaticDetection()
19 - public:    void invokeValidateBehaviourAtUpEndLimit()
20 - public:    void invokeValidateBehaviourAtDownEndLimit()
21 - public:    void invokeReadjustUpEndLimit()
22 - public:    void invokeReadjustDownEndLimit()
23 - public:    void invokeReadjustUpEndLimitAutomaticDetection()
24 - public:    void invokeReadjustDownEndLimitAutomaticDetection()
25 - public:    void invokeReadjustBackImpulse()
26 - public:    void invokeReadjustBackRelease()
27 - public:    void invokeReadjustTiltingTravel()
28 - public:    void invokeReadjustTilt()
29 - public:    void invokeGoToTilterPosition()
30 - public:    void invokeReadjustRunningTravel()
31 - public:    void invokeGoToDownEndLimit()
32 - public:    void invokeValidatePpp()
33 - public:    void invokeValidateTypeLocks()
34 - public:    void invokeValidateObstacleDetection()
35 - public:    void invokeValidateXTime()
36 - public:    void invokeValidateStartDelay()
37 - public:    void invokeValidateRunningTime()
38 - public:    void invokeValidateTiltingTime()
39 - public:    void invokeValidateTimeout()
40 - public:    void invokeValidateKinematics()
41 - public:    void invokeStartOperatingTime()
42 - public:    void invokeStopOperatingTime()
43 - public:    void invokeEnterOperatingTimeSetting()
44 - public:    void invokeValidateKNX()
45 - public:    void invokeValidateDrivingMode()
46 - public:    void invokeValidatePostPowerCutState()
47 - public:    void invokeValidateControllerType()
48 - public:    void invokeValidateMaxOperatingTime()
49 - public:    void invokeValidateAerationLock()
50 - public:    void invokeResetEndLimits()
51 - public:    void invokeReadAppChoice()
52 - public:    void invokeValidateAppChoice()
53 - public:    void invokeValidateSafetyCells()
54 - public:    void invokeValidateDoorType()
55 - public:    void invokeConfirmCellsAlignement()
56 - public:    void invokeValidateLockKeyboard()
57 - public:    void invokeResetActuatorPairings()
58 - public:    void invokeResetActuatorSettings()
59 - public:    void invokeValidatePedestrianPosition()
60 - public:    void invokeValidateOperatingModesCategory()
61 - public:    void invokeValidateSecurityEntriesCategory()
62 - public:    void invokeValidatePeripheralOutputsCategory()
63 - public:    void invokeValidateProductKinematicsCategory()
64 - public:    void invokeValidateSpeedsCategory()
65 - public:    void invokeValidateTorquesCategory()
66 - public:    void invokeValidateGenericParametersCategory()
67 - public:    void invokeValidateAllGOParameters()
68 - public:    void invokePairLightReceiver()
69 - public:    void invokeEnterInLearningMode()
70 - public:    void invokeReadSafetyCells()
71 - public:    void invokeEndOfSelfLearning()
72 - public:    void invokeReadDoorType()
73 - public:    void invokeReadCellsAlignement()
74 - public:    void invokeReadLockKeyboard()
75 - public:    void invokeReadOperatingModesCategory()
76 - public:    void invokeReadSecurityEntriesCategory()
77 - public:    void invokeReadPeripheralOutputsCategory()
78 - public:    void invokeReadProductKinematicsCategory()
79 - public:    void invokeReadSpeedsCategory()
80 - public:    void invokeReadTorquesCategory()
81 - public:    void invokeReadGenericParametersCategory()
82 - public:    void invokePrepareAllGOParameters()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgDeleteProduct : DlgWarning
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnOk_clicked()
2 - protected: void SLOT_ActionDone(LocalController::TeActionStatus _status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class OperationFamily
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgFamilyChoice : SettingsDialogBase
--- Signals:
--- Slots:
0 - private:   void radioBtnClicked()
1 - private:   void validateClicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class zyAccess_InfoTranslater
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class zzRs100_InfoTranslater
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class StandAloneState : SettingsPageState
--- Signals:
0 - protected: void next()
1 - protected: void previous()
2 - protected: void AutoSelectedWithSpecialCase()
--- Slots:
3 - private:   void nextClicked()
4 - private:   void previousClicked()
5 - private:   void validateButtonClicked()
6 - private:   void verifyButtonClicked()
7 - private:   void validationDone(TeActuatorActionStatus status)
8 - private:   void validationError(TeSettingActionNotExecute)
9 - private:   void doEmitNext()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AnimatedWidget
--- Signals:
--- Slots:
0 - public:    void startAnimation()
1 - public:    void stopAnimation()
2 - protected: void repaint()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ColorPicker
--- Signals:
0 - protected: void newCol(QColor& color)
--- Slots:
1 - public:    void setCol(QColor& color)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ClickableBarGraph
--- Signals:
0 - protected: void valueChanged(int value)
--- Slots:
1 - public:    void setValue(int _value)
2 - public:    void setMaximumValue(int max)
3 - public:    void setMinimumValue(int min)
4 - public:    void increaseValue()
5 - public:    void decreaseValue()
6 - protected: void resizeEvent(QResizeEvent* event)
7 - private:   void update()
8 - private:   void updateFromButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgEnterFilename : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnOk_clicked()
2 - protected: void on_btnCancel_clicked()
3 - protected: void updateButton()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgFamily : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void btnOk_clicked()
2 - protected: void btnCancel_clicked()
3 - protected: void btnClose_clicked()
4 - protected: void onActionCompleted(TeActuatorActionStatus _status)
5 - protected: void onActionNotExecute(TeSettingActionNotExecute _status)
6 - private:   void entrySelected()
7 - private:   void doValidate()
8 - private:   void doResetActuatorSettings()
9 - private:   void doResetActuatorPairings()
10 - private:   void doResetActuator()
11 - private:   void doSettings()
12 - private:   void doLockInterface()
13 - private:   void doSelfLearning()
14 - private:   void resetSuccess()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgFavorites : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnNew_clicked()
2 - protected: void on_btnLoad_clicked()
3 - protected: void on_btnDelete_clicked()
4 - protected: void on_btnCancel_clicked()
5 - protected: void btnClose_clicked()
6 - private:   void doNewSave(QString _sText)
7 - private:   void doNewSave()
8 - private:   void doLoadSave()
9 - private:   void doDeleteSave()
10 - private:   void updateButtons()
11 - private:   void updateFileList()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHtmlHelp
--- Signals:
--- Slots:
0 - protected: void btnClose_clicked()
1 - protected: void minimized()
2 - protected: void maximized()
3 - protected: void maximizedTwice()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgLockLocalInterface : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnOk_clicked()
2 - protected: void on_btnCancel_clicked()
3 - protected: void btnClose_clicked()
4 - protected: void onActionCompleted(TeActuatorActionStatus _status)
5 - protected: void onActionNotExecute(TeSettingActionNotExecute _status)
6 - private:   void entrySelected()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgSelfLearning : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void btnClose_clicked()
2 - protected: void btnStop_clicked()
3 - protected: void accept()
4 - protected: void nextClicked()
5 - protected: void previousClicked()
6 - protected: void btnHelp_clicked()
7 - protected: void btnValidate_clicked()
8 - protected: void valueChanged(int _index)
9 - protected: void onActionCompleted(TeActuatorActionStatus _status)
10 - protected: void onActionNotExecute(TeSettingActionNotExecute _status)
11 - protected: void incrementWizard()
12 - protected: void StopMotor()
13 - protected: void ConfirmCellsAlignement()
14 - protected: void ResetCellsSettings(bool _bShowNextButton)
15 - protected: void ResetCellsSettings()
16 - protected: void ResetDoorSettings()
17 - protected: void restartSelfLearningPhase()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgRadioTransfer : DlgShaded
--- Signals:
0 - protected: void emitResetOk()
--- Slots:
1 - public:    int exec()
2 - public:    void actionDone()
3 - protected: void showEvent(QShowEvent* event)
4 - protected: void hideEvent(QHideEvent* event)
5 - protected: void btnOk_clicked()
6 - protected: void on_btnCancel_clicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgSelectDataSwitch : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void btnClose_clicked()
2 - protected: void on_btnMoreData_clicked()
3 - protected: void on_btnHardwareSwitch_clicked()
4 - private:   QString generateDataContent()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgSettings : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void btnOk_clicked()
2 - protected: void btnCancel_clicked()
3 - protected: void btnClose_clicked()
4 - protected: void btnLeft_clicked()
5 - protected: void btnRight_clicked()
6 - protected: void btnPage1_clicked()
7 - protected: void btnPage2_clicked()
8 - protected: void btnPage3_clicked()
9 - protected: void btnHelp_clicked()
10 - protected: void btnTest_clicked()
11 - protected: void do_Help()
12 - protected: void do_Test()
13 - protected: void do_ValidateForTest()
14 - protected: void do_Validate()
15 - protected: void valueChanged(int _index)
16 - protected: void timeEditPlus()
17 - protected: void timeEditMinus()
18 - protected: void onActionCompleted(TeActuatorActionStatus _status)
19 - protected: void onActionNotExecute(TeSettingActionNotExecute _status)
20 - protected: void MakeActuatorConnections()
21 - protected: void ConfirmCellsAlignement()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SelfLearningWizard
--- Signals:
0 - protected: void nextClicked()
1 - protected: void previousClicked()
--- Slots:
2 - public:    void btnNext_clicked()
3 - public:    void btnPrevious_clicked()
4 - public:    void hideNextButton()
5 - public:    void showNextButton()
6 - public:    void hidePreviousButton()
7 - public:    void showPreviousButton()
8 - public:    void updateButtonPosition()
9 - private:   void onTimeToBlink()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgMotorDriving : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void btnCancel_clicked()
2 - protected: void btnValidate_clicked()
3 - protected: void onActionCompleted(TeActuatorActionStatus _status)
4 - protected: void onActionNotExecute(TeSettingActionNotExecute _status)
5 - protected: void MakeActuatorConnections()
6 - protected: void EnableButtons()
7 - protected: void DisableButtons()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgHardwareSwitch : DlgShaded
--- Signals:
--- Slots:
0 - public:    int exec()
1 - protected: void on_btnClose_clicked()
2 - protected: void on_btnRefresh_clicked()
3 - protected: void refresh()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class EjectSettingStateWaiter
--- Signals:
--- Slots:
0 - public:    TeOperationStatus waitForEjectFromSet()
1 - private:   void onActionInProgress()
2 - private:   void onActionCompleted(TeActuatorActionStatus status)
3 - private:   void onActionNotExecute(TeSettingActionNotExecute status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class FavoriteConfigurationWaiter
--- Signals:
--- Slots:
0 - public:    TeOperationStatus waitForReadObjectsForConfiguration()
1 - public:    TeOperationStatus waitForWriteObjectsForConfiguration()
2 - private:   void onActionInProgress()
3 - private:   void onActionCompleted(TeActuatorActionStatus status)
4 - private:   void onActionNotExecute(TeSettingActionNotExecute status)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class TimeParameterWidget
--- Signals:
0 - protected: void valueChanged(int _value)
--- Slots:
1 - private:   void minusClicked()
2 - private:   void plusClicked()
3 - private:   void hourMinusClicked()
4 - private:   void hourPlusClicked()
5 - private:   void minuteMinusClicked()
6 - private:   void minutePlusClicked()
7 - private:   void secondMinusClicked()
8 - private:   void secondPlusClicked()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DlgInfoTransmitterPage
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LevelIndicator
--- Signals:
--- Slots:
0 - public:    void setLevel(int _level)
1 - public:    void setDemoMode(bool _bDemoMode)
2 - public:    void setColor(QColor _color)
--- Other Methods:
--- Properties:
0 - int level
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
1 - QColor color
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ProgressIndicator
--- Signals:
--- Slots:
0 - public:    void setAnimationDelay(int _delay)
1 - public:    void setDisplayedWhenStopped(bool _state)
2 - public:    void setColor(QColor _color)
3 - public:    void startAnimation()
4 - public:    void stopAnimation()
--- Other Methods:
--- Properties:
0 - int delay
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
1 - bool displayedWhenStopped
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
2 - QColor color
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class RoundProgressBar
--- Signals:
--- Slots:
0 - public:    void setColorBackground(QColor _color)
1 - public:    void setColorContent(QColor _color)
2 - public:    void setColorChunk(QColor _color)
--- Other Methods:
--- Properties:
0 - QColor colorBackground
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
1 - QColor colorContent
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
2 - QColor colorChunk
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class TimeIndicator
--- Signals:
0 - protected: void animationStopped()
--- Slots:
1 - public:    void setAnimationPeriod(int _period)
2 - public:    void setDisplayedWhenStopped(bool _state)
3 - public:    void setOneShot(bool _bOneShot)
4 - public:    void setColor(QColor _color)
5 - public:    void startAnimation()
6 - public:    void stopAnimation()
--- Other Methods:
--- Properties:
0 - int period
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
1 - bool displayedWhenStopped
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
2 - bool oneShot
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
3 - QColor color
    flags: Readable | Writable | StdCppSet | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ApplicationProxy
--- Signals:
--- Slots:
0 - public:    void newFrameHasBeenReceived(ProxyFrame oProxyFrameArg)
1 - public:    void transmissionEnded()
2 - public:    void transmissionEndedWithError()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ProxyFrame
--- Signals:
0 - protected: void frameIsComplete()
1 - protected: void errorsInFrame()
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class CommunicationMedium
--- Signals:
0 - protected: void validDataReceived(char btDataArg)
1 - protected: void transmissionCompleted()
2 - protected: void ErrorOccured()
--- Slots:
3 - private:   void onReadyRead()
4 - private:   void onBytesWritten(qint64 dataWritten)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class CommunicationGatewayReceiver
--- Signals:
0 - protected: void newFrameHasBeenReceived(ProxyFrame ProxyFrameArg)
--- Slots:
1 - public:    void SLOT_CheckFrameReceived()
2 - public:    void AckReceived()
3 - public:    void CompleteFrameReceived()
4 - public:    void TimeOutElapsed()
5 - public:    void ValidDataReceived(char btDataArg)
6 - private:   void CommandReceived()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class CommunicationGatewayEmitter
--- Signals:
0 - protected: void SIGNAL_transmissionEnded()
1 - protected: void SIGNAL_transmissionEndedWithError()
--- Slots:
2 - public:    void EmissionEnded()
3 - public:    void TimeOutElapsed()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class QextSerialEnumerator
--- Signals:
0 - protected: void deviceDiscovered(QextPortInfo info)
1 - protected: void deviceRemoved(QextPortInfo info)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class QextSerialRegistrationWidget
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class QextSerialPort
--- Signals:
0 - protected: void dsrChanged(bool status)
--- Slots:
1 - private:   void onWinEvent(HANDLE h)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Rinjdael
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Actuator
--- Signals:
0 - protected: void SIGNAL_ActionCompleted(TeActuatorActionStatus eActionStatusArg)
1 - protected: void SIGNAL_ActionInProgress()
2 - protected: void SIGNAL_ActuatorNameUpdated()
3 - protected: void SIGNAL_CurrentPositionUpdated()
4 - protected: void SIGNAL_TargetPositionModified()
5 - protected: void SIGNAL_MovementInProgress()
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoActuator : Actuator
--- Signals:
0 - protected: void SIGNAL_ActuatorDataUpdated(TeIoSessionStatus _eIoSessionStatusArg)
1 - protected: void SIGNAL_VisualIdUpdated()
2 - protected: void SIGNAL_SettingStatusUpdated()
--- Slots:
3 - public:    void MovementInProgress()
4 - public:    void SessionCompleted(IoSession* _pIoSessionArg)
5 - public:    void SessionInProgress(IoSession* _pIoSessionArg)
6 - public:    void StopExecution()
7 - public:    void SetFavoritePosition(qint8 _ui8valueArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfyActuator : IoActuator
--- Signals:
0 - protected: void SIGNAL_SettingActionNotExecute(TeSettingActionNotExecute _eActionNotExecuteArg)
--- Slots:
1 - public:    void RotateInUserModeToDown()
2 - public:    void RotateInUserModeToUp()
3 - public:    void AutoLearning()
4 - public:    void DeleteFavoritePosition()
5 - public:    void EjectFromSettingMode()
6 - public:    void EnterInSettingMode()
7 - public:    void IncrementPositionToDown()
8 - public:    void IncrementPositionToUp()
9 - public:    void MemorizeSettings()
10 - public:    void ReadCurrentSettingStatus()
11 - public:    void ReadjustEndLimit(TeEndLimit _eEndLimitArg, TeParameterID _eParameterIDArg)
12 - public:    void ReadjustFavoritePosition()
13 - public:    void ReadjustDownEndLimit()
14 - public:    void EnterOperatingTimeSetting()
15 - public:    void ReadjustUpEndLimit()
16 - public:    void ResetActuator()
17 - public:    void ResetActuatorWithoutDoublePowerCut()
18 - public:    void ResetEndLimits()
19 - public:    void ResetEndLimitsMode()
20 - public:    void RestartAction()
21 - public:    void RestartLastAction()
22 - public:    void RotateInSecureModeToDown(quint8 _ui8IndexArg)
23 - public:    void RotateInSecureModeToUp(quint8 _ui8IndexArg)
24 - public:    void SessionInProgress(IoSession* _pIoSessionArg)
25 - public:    void SetCurrentPositionAsDownEndLimit()
26 - public:    void SetCurrentPositionAsUpEndLimit()
27 - public:    void StartOperatingTime()
28 - public:    void StopOperatingTime()
29 - public:    void StopRotation()
30 - public:    void ValidateXTime()
31 - public:    void ValidateObstacleDetection()
32 - public:    void ValidateRunningTime()
33 - public:    void ValidateTimeout()
34 - public:    void ValidateControllerType()
35 - public:    void ValidatePostPowerCutState()
36 - public:    void ValidateDrivingMode()
37 - public:    void ValidateVisualId(quint16 _visualIdArg)
38 - public:    void ValidateAerationLock()
39 - protected: void PRT_SessionCompletedSomfy(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
0 - quint16 TimeInMsRepetitionDeadMan
    flags: Readable | Designable | Scriptable | Stored | ResolveEditable
1 - quint16 XTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
2 - quint16 XTimeOEM
    flags: Readable | Designable | Scriptable | Stored | ResolveEditable
3 - double RunningTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
4 - quint16 TimeoutActivation
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
5 - quint16 TimeoutValue
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
6 - quint16 ObstacleDetection
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
7 - quint16 ControllerType
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
8 - quint16 PostPowerCutState
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
9 - quint16 DrivingMode
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
10 - quint16 AerationLock
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfyAsrsActuator : IoSomfyActuator
--- Signals:
--- Slots:
0 - public:    qint8 ReadjustTiltDown()
1 - public:    qint8 ReadjustTiltUp()
2 - public:    void GoToTilterPosition()
3 - public:    void GoToFlatSlatsPosition()
4 - public:    void InvertRotationDirection()
5 - public:    void SelectManualEndLimitsMode()
6 - public:    void ReadjustTilt()
7 - public:    void ValidateTilt()
8 - protected: void PRT_SessionCompletedAsrs(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfyAwningActuator : IoSomfyActuator
--- Signals:
--- Slots:
0 - public:    void InvertRotationDirection()
1 - public:    void SelectAutoEndLimitsMode()
2 - public:    void SelectAutoEndLimitsMode_WithSpecialCase()
3 - public:    void SelectManualEndLimitsMode()
4 - public:    void SelectSemiAutoDownMode()
5 - public:    void SelectSemiAutoUpMode()
6 - public:    void ReadjustBackImpulse()
7 - public:    void ReadjustBackRelease()
8 - public:    void ReadjustDownEndLimitAutomaticDetection()
9 - public:    void ReadjustUpEndLimitAutomaticDetection()
10 - public:    void RegisterAuxiliaryEndLimitEntry()
11 - public:    void RegisterAuxiliaryEndLimitExit()
12 - public:    void ValidateBackImpulsePosition()
13 - public:    void ValidateBackReleasePosition()
14 - public:    void ValidateDownEndLimitAutomaticDetection()
15 - public:    void ValidateTypeLocks()
16 - public:    void ValidateUpEndLimitAutomaticDetection()
17 - protected: void PRT_SessionCompletedAwning(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
0 - quint16 EndLimitAutoDetection
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
1 - quint16 BackRelease
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
2 - quint16 TypeLocks
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfyEvbActuator : IoSomfyActuator
--- Signals:
--- Slots:
0 - public:    quint8 GetLiftPosition()
1 - public:    quint8 GetTiltPosition()
2 - public:    IoSession* ReadjustTiltDown()
3 - public:    IoSession* ReadjustTiltUp()
4 - public:    void SetLiftPosition(quint8 _ui8PositionArg)
5 - public:    void SetTiltPosition(quint8 _ui8PositionArg)
6 - public:    void SLOT_SendEjectFromSettingMode()
7 - public:    void SLOT_Stop_Verify_AUEL()
8 - public:    void EnterSetDownEndLimit()
9 - public:    void EnterSetUpEndLimit()
10 - public:    void GoToDownEndLimit()
11 - public:    void IdentifyMotorType()
12 - public:    void InvertRotationDirection()
13 - public:    void ReadjustTilt()
14 - public:    void ReadjustTiltingTravel()
15 - public:    void ReadjustRunningTravel()
16 - public:    void SelectManualEndLimitsMode()
17 - public:    void SelectSemiAutoDownMode()
18 - public:    void SelectSemiAutoUpMode()
19 - public:    void StopMotor()
20 - public:    void ValidateKinematics()
21 - public:    void ValidateRunningTravel()
22 - public:    void ValidateStartDelay()
23 - public:    void ValidateTilt()
24 - public:    void ValidateTiltingTime()
25 - public:    void ValidateTiltingTravelManu()
26 - public:    void ValidateTiltingTravelValue()
27 - public:    void VerifyTiltingTravel()
28 - protected: void PRT_SessionCompletedEvb(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
0 - quint16 TiltingTravel
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
1 - double StartDelay
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
2 - double TiltingTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
3 - quint16 KinematicsValueA
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
4 - quint16 KinematicsValueB
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
5 - quint16 Kinematics
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfyRollerShutterActuator : IoSomfyActuator
--- Signals:
--- Slots:
0 - public:    void InvertRotationDirection()
1 - public:    void SelectAutoEndLimitsMode()
2 - public:    void SelectManualEndLimitsMode()
3 - public:    void SelectSemiAutoDownMode()
4 - public:    void SelectSemiAutoUpMode()
5 - public:    void SetAutoModeForBothEndLimits()
6 - public:    void SetAutoModeForDownEndLimit()
7 - public:    void SetAutoModeForUpEndLimit()
8 - public:    void ValidateBehaviourAtDownEndLimit()
9 - public:    void ValidateBehaviourAtUpEndLimit()
10 - public:    void ValidatePpp()
11 - public:    void ValidateKNX()
12 - public:    void ValidateLowSpeedValue()
13 - public:    void ValidateNominalSpeedValue()
14 - public:    void ValidateSoftStartValue()
15 - public:    void ValidateSoftStopValue()
16 - protected: void PRT_SessionCompletedRollerShutter(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
0 - quint16 LowSpeedValue
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
1 - quint16 NominalSpeedValue
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
2 - quint16 SoftStartValue
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
3 - quint16 SoftStopValue
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
4 - quint16 BehaviourAtUpEndLimit
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
5 - quint16 BehaviourAtDownEndLimit
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
6 - quint16 Ppp
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
7 - quint16 KNX
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfyGateActuator : IoSomfyActuator
--- Signals:
--- Slots:
0 - public:    void EnterInLearningMode()
1 - public:    void EndOfSelfLearning()
2 - public:    void EjectFromLearningMode()
3 - public:    void InvertRotationDirection()
4 - public:    void ResetActuatorPairings()
5 - public:    void ResetActuatorSettings()
6 - public:    void ReadConfiguration()
7 - public:    void WriteConfiguration()
8 - public:    void ConfirmCellsAlignement()
9 - public:    void ValidateSafetyCells()
10 - public:    void ValidateDoorType()
11 - public:    void ValidateLockKeyboard()
12 - public:    void ValidateOperatingModesCategory()
13 - public:    void ValidateSpeedsCategory()
14 - public:    void ValidateTorquesCategory()
15 - public:    void ValidateProductKinematicsCategory()
16 - public:    void ValidateSecurityEntriesCategory()
17 - public:    void ValidatePeripheralOutputsCategory()
18 - public:    void ValidatePedestrianPosition()
19 - public:    void ReadSafetyCells()
20 - public:    void ReadDoorType()
21 - public:    void ReadCellsAlignement()
22 - public:    void ReadLockKeyboard()
23 - public:    void ReadOperatingModesCategory()
24 - public:    void ReadSpeedsCategory()
25 - public:    void ReadTorquesCategory()
26 - public:    void ReadProductKinematicsCategory()
27 - public:    void ReadSecurityEntriesCategory()
28 - public:    void ReadPeripheralOutputsCategory()
29 - public:    void PairLightReceiver()
30 - protected: void PRT_SessionCompletedGate(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
0 - quint16 CompleteMode
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
1 - quint16 CompleteTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
2 - quint16 PedestrianMode
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
3 - quint16 ShortPedestrianTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
4 - quint16 LongPedestrianTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
5 - quint16 PedestrianAmplitude
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
6 - quint16 SafetyCells
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
7 - quint16 SafetyEdge
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
8 - quint16 SafetyProgrammable
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
9 - quint16 SafetyProgrammableFunction
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
10 - quint16 SafetyProgrammableAction
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
11 - quint16 OrangeLight
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
12 - quint16 AreaLight
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
13 - quint16 AreaTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
14 - quint16 Auxiliary
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
15 - quint16 AuxiliaryTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
16 - quint16 LockOutput
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
17 - quint16 LockRelease
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
18 - quint16 ClosingSpeed
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
19 - quint16 OpeningSpeed
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
20 - quint16 ClosingSlowdown
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
21 - quint16 OpeningSlowdown
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
22 - quint16 ShiftClosing
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
23 - quint16 ShiftOpening
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
24 - quint16 M1ClosingTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
25 - quint16 M1OpeningTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
26 - quint16 M1ClosingSlowdownTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
27 - quint16 M1OpeningSlowdownTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
28 - quint16 M2ClosingTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
29 - quint16 M2OpeningTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
30 - quint16 M2ClosingSlowdownTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
31 - quint16 M2OpeningSlowdownTorque
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
32 - quint16 ObstacleSensitivity
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
33 - quint16 WiredControl
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
34 - quint16 MaintainingTime
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
35 - quint16 CouplingClosing
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
36 - quint16 CouplingOpening
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
37 - quint16 Alarm
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
38 - quint16 AutomaticClosing
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
39 - quint16 CellsAlignement
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
40 - quint16 DoorType
    flags: Readable | Writable | Designable | Scriptable | Stored | ResolveEditable
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfyLightActuator : IoSomfyActuator
--- Signals:
--- Slots:
0 - protected: void PRT_SessionCompletedLight(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSomfySlidingWindowActuator : IoSomfyActuator
--- Signals:
--- Slots:
0 - public:    void InvertRotationDirection()
1 - protected: void PRT_SessionCompletedSlidingWindow(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoBoostModeAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoComfortAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoEcoModeAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoHaltedALias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoHighSpeedAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoLastOperatingValueAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoLowSpeedAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoMaximumSlatsOpeningAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoMemorized1Alias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoMemorized2Alias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoPartialOpeningAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoPedestrianAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoRainProtectedPositionAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoRainProtectedValueMaxOpenAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoRainRelaxedValueMaxOpenAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadOnlyAlias : IoAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadWriteAlias : IoAlias
--- Signals:
0 - protected: void SIGNAL_ValueChanged()
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSecuredVentilationAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSetbackAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSecurityAlias : IoReadWriteAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSunTermAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoTilterPositionAlias : IoReadOnlyAlias
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoParameter : Parameter
--- Signals:
0 - protected: void SIGNAL_TargetPositionModified()
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoParameterContinuous : IoParameterStandard
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoParameterDiscrete : IoParameterStandard
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoParameterNonStandard : IoParameter
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoParameterOnOff : IoParameterContinuous
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoParameterOpenedClosed : IoParameterContinuous
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoParameterStandard : IoParameter
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Parameter
--- Signals:
0 - protected: void SIGNAL_TargetPositionModified()
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LevelsOperation : SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class OnOffOperation : SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ModeSettingOperation : SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WithMovementOperation : SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AppChoiceOperation : SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LockSelectionOperation : SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AccessCategory
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AccessOperation : SettingOperation
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AllreadyEncryptedProxyFrame : ProxyFrame
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class BootloaderCommandProxyFrame : ProxyFrame
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class BootloaderDevice : Device
--- Signals:
0 - protected: void generalAck()
1 - protected: void writeDataAck(CRC& oCrc)
2 - protected: void writeDataNack()
3 - protected: void readDataAck()
4 - protected: void readDataNack()
5 - protected: void quitRestartAck()
6 - protected: void eraseAck()
7 - protected: void identifyAck()
8 - protected: void eraseNack()
9 - protected: void SIGNAL_ReadyForUse()
10 - protected: void SIGNAL_transmissionEnded()
11 - protected: void SIGNAL_transmissionEndedWithError()
--- Slots:
12 - private:   void SLOT_EmitSignalReadyForUse()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class BootloaderMaster
--- Signals:
0 - protected: void SIGNAL_UpgradeComplete()
1 - protected: void SIGNAL_ErrorDuringUpgrade()
2 - protected: void SIGNAL_UpgradeProgress(int arg)
--- Slots:
3 - public:    void OnEraseAck()
4 - public:    void OnEraseNack()
5 - public:    void OnIdentifyAck()
6 - public:    void OnQuitRestartAck()
7 - public:    void OnTimeoutReceived()
8 - public:    void OnWriteDataAck(CRC& crcArg)
9 - public:    void OnWriteDataNack()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Device
--- Signals:
0 - protected: void SIGNAL_ReadyForUse()
1 - protected: void SIGNAL_ErrorWhileSynchronising()
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoPlug : Device
--- Signals:
0 - protected: void SIGNAL_IoPlugLost()
1 - protected: void SIGNAL_SoftwareUpgradeStartError()
2 - protected: void SIGNAL_SoftwareUpgradeStartInProgress()
--- Slots:
3 - public:    void EmbeddedTestFinished()
4 - public:    void SLOT_EndOfSynchroRead()
5 - private:   void SLOT_EmitSignalReadyForUse()
6 - private:   void SLOT_EmitSignalSoftwareUpgradeStartError()
7 - private:   void SLOT_EmitSignalSoftwareUpgradeStartInProgress()
8 - private:   void SLOT_StartIoNetwork()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class EraseAllObjectsSynchro : ObjectSynchro
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ObjectSynchro
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ObjectSynchronizer
--- Signals:
0 - protected: void SIGNAL_SynchronizationCompleted()
1 - protected: void SIGNAL_SynchronizationError()
--- Slots:
2 - public:    void SendStatusAck()
3 - public:    void SessionStatusReceived(ObjectSynchroProxyFrame* _pProxyFrameArg)
4 - private:   void SLOT_EmitSignalSynchronizationCompleted()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ObjectSynchroProxyFrame : ProxyFrame
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ReadObjectSynchro : ObjectSynchro
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WriteObjectSynchro : ObjectSynchro
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SerializedObject
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DeviceManager
--- Signals:
0 - protected: void SIGNAL_IoPlugConnected(IoPlug* _pIoPlugArg)
1 - protected: void SIGNAL_IoPlugDisconnected(IoPlug* _pIoPlugArg)
2 - protected: void SIGNAL_BootloaderConnected(BootloaderDevice* _pBootloaderDeviceArg)
3 - protected: void SIGNAL_BootloaderDisconnected(BootloaderDevice* _pBootloaderDeviceArg)
4 - protected: void SIGNAL_ErrorDuringSynchronization(Device* _pDeviceArg)
--- Slots:
5 - public:    void DeviceIsReadyForUse()
6 - public:    void UsbDeviceConnected(QextPortInfo _infoArg)
7 - public:    void UsbDeviceDisconnected(QextPortInfo _infoArg)
8 - private:   void SLOT_IdentifyBootloader()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Box
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SensorBox : Box
--- Signals:
0 - protected: void SIGNAL_KeyUpdateCompleted()
1 - protected: void SIGNAL_KeyUpdateFailed()
2 - protected: void SIGNAL_SystemSensorUpdated()
3 - protected: void SIGNAL_WindThresholdUpdated()
--- Slots:
4 - public:    void SLOT_FillSessionInfo(IoSession* pIoSessionArg)
5 - public:    void SLOT_KeyUpdateCompleted()
6 - public:    void SLOT_KeyUpdateFailed()
7 - public:    void SLOT_KeyUpdateRequired()
8 - public:    void SLOT_SessionCompleted(TeIoSessionStatus pIoSessionStatusArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Beacon : Box
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Scd : Box
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Controller
--- Signals:
0 - protected: void SIGNAL_FillSessionInfo(IoSession* pIoSessionArg)
1 - protected: void SIGNAL_KeyTransferInProgress()
2 - protected: void SIGNAL_KeySettingCompleted()
3 - protected: void SIGNAL_KeySettingFailed()
4 - protected: void SIGNAL_EquipmentTransferInProgress()
5 - protected: void SIGNAL_EquipmentTransferCompleted()
6 - protected: void SIGNAL_EquipmentTransferFailed()
7 - protected: void SIGNAL_SessionCompleted(IoSession* pIoSessionArg)
8 - protected: void SIGNAL_ReadyForTransfer()
--- Slots:
9 - public:    void SLOT_KeyGivingRequired()
10 - public:    void SLOT_FillSessionInfo(IoSession* pIoSessionArg)
11 - public:    void SLOT_KeyTransferInProgress()
12 - public:    void SLOT_KeySettingCompleted()
13 - public:    void SLOT_KeySettingFailed()
14 - public:    void SLOT_EquipmentTransferInProgress()
15 - public:    void SLOT_SessionCompleted(IoSession* pIoSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class EndProduct
--- Signals:
0 - protected: void SIGNAL_ActionInProgress()
1 - protected: void SIGNAL_ActionCompleted(TeActuatorActionStatus eActionStatusArg)
2 - protected: void SIGNAL_KeyUpdateCompleted()
3 - protected: void SIGNAL_KeyUpdateFailed()
4 - protected: void SIGNAL_NameUpdated()
5 - protected: void SIGNAL_PositionUpdated()
6 - protected: void SIGNAL_TargetPositionModified()
--- Slots:
7 - public:    void KeyUpdateRequired()
8 - public:    void KeyUpdateCompleted()
9 - public:    void KeyUpdateFailed()
10 - public:    void ReadSoftwareVersion()
11 - public:    void SetCurrentName(QString _sNameArg)
12 - public:    void SetMyPosition(qint8 _ui8ValueArg)
13 - public:    QString GetName()
14 - public:    void GetCurrentName()
15 - public:    void GetCurrentPosition()
16 - public:    void LocateYourself()
17 - public:    void Stop()
18 - public:    void UpdateVisualId()
19 - public:    void ValidateAppChoice()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GenericEndProduct : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class RollerShutter : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class VerticalExteriorAwning : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class HorizontalAwning : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Light : EndProduct
--- Signals:
--- Slots:
0 - public:    void SwitchOn(TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void SwitchOff(TeActionRequesterType _eActionRequesterTypeArg)
2 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GenericLight : Light
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LightOnOff : Light
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LightWithColorHandling : Light
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LightWithTemperatureHandling : Light
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class OnOffSwitch : EndProduct
--- Signals:
--- Slots:
0 - public:    void SwitchOn(TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void SwitchOff(TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DoorLock : EndProduct
--- Signals:
--- Slots:
0 - public:    void Lock(TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void Unlock(TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WindowLock : EndProduct
--- Signals:
--- Slots:
0 - public:    void Lock(TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void Unlock(TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class EVB : EndProduct
--- Signals:
--- Slots:
0 - public:    void SetLiftPosition(quint8 _ui8LiftPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void SetTiltPosition(quint8 _ui8TiltPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
2 - public:    quint8 GetLiftPosition()
3 - public:    quint8 GetTiltPosition()
4 - public:    void GoToPosition(quint8 _ui8LiftPosInPercentArg, quint8 _ui8TiltPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IVB : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8LiftPosInPercentArg, quint8 _ui8TiltPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void SetLiftPosition(quint8 _ui8LiftPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
2 - public:    void SetTiltPosition(quint8 _ui8TiltPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
3 - public:    quint8 GetLiftPosition()
4 - public:    quint8 GetTiltPosition()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class VIB : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GDO : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
1 - private:   void SLOT_SettingStatusUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GDOOpenClose : GDO
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GateOpener : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
1 - private:   void SLOT_SettingStatusUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GateOpenerOpenClose : GateOpener
--- Signals:
--- Slots:
0 - public:    void Open(TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void Close(TeActionRequesterType _eActionRequesterTypeArg)
2 - public:    void PedestrianPosition(TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WindowOpener : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GenericWindowOpener : WindowOpener
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WindowOpenerWithRainSensor : WindowOpener
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AdjustableSlatsRollingShutter : EndProduct
--- Signals:
--- Slots:
0 - public:    void SetLiftPosition(quint8 _ui8LiftPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void SetTiltPosition(quint8 _ui8TiltPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
2 - public:    quint8 GetLiftPosition()
3 - public:    quint8 GetTiltPosition()
4 - public:    void Open(TeActionRequesterType _eActionRequesterTypeArg)
5 - public:    void Close(TeActionRequesterType _eActionRequesterTypeArg)
6 - public:    void GoToTilterPosition(TeActionRequesterType _eActionRequesterTypeArg)
7 - public:    void GoToPosition(quint8 _ui8LiftPosInPercentArg, quint8 _ui8TiltPosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
8 - public:    void GoToFlatPosition(TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class DualRollingShutter : RollerShutter
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IntrusionAlarm : EndProduct
--- Signals:
--- Slots:
0 - public:    void Arming(TeActionRequesterType _eActionRequesterTypeArg)
1 - public:    void Desarming(TeActionRequesterType _eActionRequesterTypeArg)
2 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SwingingShutters : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SwingingShuttersWIH : SwingingShutters
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class HeatPump : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class CurtainTrack : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class VentilationPoint : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AirInlet : VentilationPoint
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AirOutlet : VentilationPoint
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class AirTransfer : VentilationPoint
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ExteriorHeating : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LouverBlind : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class TemperatureControlInterface : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SlidingWindow : EndProduct
--- Signals:
--- Slots:
0 - public:    void GoToPosition(quint8 _ui8PosInPercentArg, TeActionRequesterType _eActionRequesterTypeArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SlidingWindowWithLock : SlidingWindow
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Sensor
--- Signals:
0 - protected: void SIGNAL_ActionStatus(Sensor::TeActionStatus eActionStatusArg)
1 - protected: void SIGNAL_SensorEventReceived()
2 - protected: void SIGNAL_KeyTransferCompleted()
3 - protected: void SIGNAL_SensorBatteryLevelChanged(TeSensorBatteryLevel bBatteryLevelArg)
4 - protected: void SIGNAL_SensorDataUpdated(TeIoSessionStatus _eIoSessionStatusArg)
5 - protected: void SIGNAL_SensorOutOfOrder()
6 - protected: void SIGNAL_SensorOutOfSystem()
--- Slots:
7 - protected: void EmitSignalBatteryLevelChanged()
8 - protected: void EmitSignalDeleteSensorOk()
9 - protected: void EmitSignalDeleteSensorFail()
10 - protected: void EmitSignalSensorEventReceived()
11 - protected: void EmitSignalSensorOutOfOrder()
12 - protected: void EmitSignalSensorOutOfSystem()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class GenericSensor : Sensor
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SunSensor : Sensor
--- Signals:
0 - protected: void SIGNAL_ActionFailed()
1 - protected: void SIGNAL_EventSubscribeUpdated()
2 - protected: void SIGNAL_ListeningPeriodClosed()
3 - protected: void SIGNAL_MeasureInProgress()
4 - protected: void SIGNAL_OutOfOrder()
5 - protected: void SIGNAL_SensorNameUpdated()
6 - protected: void SIGNAL_SensorStatusUpdated()
--- Slots:
7 - public:    void SLOT_ActionFailed()
8 - public:    void SLOT_EventSubscribeUpdated()
9 - public:    void SLOT_FillSessionInfo(IoSession* _pIoSessionArg)
10 - public:    void SLOT_ListeningPeriodClosed()
11 - public:    void SLOT_MeasureInProgress()
12 - public:    void SLOT_OutOfOrder()
13 - public:    void SLOT_TimerElapsed()
14 - public:    void SLOT_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
15 - public:    void SLOT_SessionInProgress(IoSession* _pIoSessionArg)
16 - public:    void SLOT_SensorEventReceiver(SensorEvent* _pSensorEventArg)
17 - public:    void SLOT_SensorNameSet()
18 - public:    void SLOT_SensorNameUpdated()
19 - public:    void SLOT_SensorOutOfSystem()
20 - public:    void SLOT_SensorStatusUpdated()
21 - private:   void EmitSignalActionFailed()
22 - private:   void EmitSignalKeyTransferCompleted()
23 - private:   void EmitSignalListeningPeriodClosed()
24 - private:   void EmitSignalMeasureInProgress()
25 - private:   void EmitSignalOutOfOrder()
26 - private:   void EmitSignalSensorDataUpdated()
27 - private:   void EmitSignalSensorNameUpdated()
28 - private:   void EmitSignalSensorStatusUpdated()
29 - private:   void EmitSignalSubscribeEventUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class TemperatureSensor : Sensor
--- Signals:
0 - protected: void SIGNAL_ActionFailed()
1 - protected: void SIGNAL_EventSubscribeUpdated()
2 - protected: void SIGNAL_ListeningPeriodClosed()
3 - protected: void SIGNAL_MeasureInProgress()
4 - protected: void SIGNAL_OutOfOrder()
5 - protected: void SIGNAL_SensorNameUpdated()
6 - protected: void SIGNAL_SensorStatusUpdated()
--- Slots:
7 - public:    void SLOT_ActionFailed()
8 - public:    void SLOT_EventSubscribeUpdated()
9 - public:    void SLOT_FillSessionInfo(IoSession* _pIoSessionArg)
10 - public:    void SLOT_ListeningPeriodClosed()
11 - public:    void SLOT_MeasureInProgress()
12 - public:    void SLOT_OutOfOrder()
13 - public:    void SLOT_TimerElapsed()
14 - public:    void SLOT_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
15 - public:    void SLOT_SessionInProgress(IoSession* _pIoSessionArg)
16 - public:    void SLOT_SensorEventReceiver(SensorEvent* _pSensorEventArg)
17 - public:    void SLOT_SensorNameSet()
18 - public:    void SLOT_SensorNameUpdated()
19 - public:    void SLOT_SensorOutOfSystem()
20 - public:    void SLOT_SensorStatusUpdated()
21 - private:   void EmitSignalActionFailed()
22 - private:   void EmitSignalKeyTransferCompleted()
23 - private:   void EmitSignalListeningPeriodClosed()
24 - private:   void EmitSignalMeasureInProgress()
25 - private:   void EmitSignalOutOfOrder()
26 - private:   void EmitSignalSensorDataUpdated()
27 - private:   void EmitSignalSensorNameUpdated()
28 - private:   void EmitSignalSensorStatusUpdated()
29 - private:   void EmitSignalSubscribeEventUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WindSensor : Sensor
--- Signals:
0 - protected: void SIGNAL_ThresholdReadingCompleted()
1 - protected: void SIGNAL_ThresholdWritingCompleted()
2 - protected: void SIGNAL_WindThresholdReceived()
3 - protected: void SIGNAL_ActionFailed()
4 - protected: void SIGNAL_EventSubscribeUpdated()
5 - protected: void SIGNAL_ListeningPeriodClosed()
6 - protected: void SIGNAL_MeasureInProgress()
7 - protected: void SIGNAL_OutOfOrder()
8 - protected: void SIGNAL_SensorNameUpdated()
9 - protected: void SIGNAL_SensorStatusUpdated()
--- Slots:
10 - public:    void SLOT_ActionFailed()
11 - public:    void SLOT_EventSubscribeUpdated()
12 - public:    void SLOT_FillSessionInfo(IoSession* _pIoSessionArg)
13 - public:    void SLOT_ListeningPeriodClosed()
14 - public:    void SLOT_MeasureInProgress()
15 - public:    void SLOT_OutOfOrder()
16 - public:    void SLOT_ObjectArrayReceiver(IoObjectsArray* _pIoObjectArrayArg)
17 - public:    void SLOT_TimerElapsed()
18 - public:    void SLOT_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
19 - public:    void SLOT_SessionInProgress(IoSession* _pIoSessionArg)
20 - public:    void SLOT_SensorEventReceiver(SensorEvent* _pSensorEventArg)
21 - public:    void SLOT_SensorNameSet()
22 - public:    void SLOT_SensorNameUpdated()
23 - public:    void SLOT_SensorOutOfSystem()
24 - public:    void SLOT_SensorStatusUpdated()
25 - private:   void EmitSignalActionFailed()
26 - private:   void EmitSignalKeyTransferCompleted()
27 - private:   void EmitSignalListeningPeriodClosed()
28 - private:   void EmitSignalMeasureInProgress()
29 - private:   void EmitSignalOutOfOrder()
30 - private:   void EmitSignalSensorDataUpdated()
31 - private:   void EmitSignalSensorNameUpdated()
32 - private:   void EmitSignalSensorStatusUpdated()
33 - private:   void EmitSignalSubscribeEventUpdated()
34 - private:   void EmitSignalThresholdSessionCompleted()
35 - private:   void EmitSignalThresholdSessionUncompleted()
36 - private:   void EmitSignalWindThresholdReceived()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class WindThreshold
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SunisIo : SunSensor
--- Signals:
--- Slots:
0 - public:    void SLOT_ActionFailed()
1 - public:    void SLOT_EventSubscribeUpdated()
2 - public:    void SLOT_FillSessionInfo(IoSession* _pIoSessionArg)
3 - public:    void SLOT_ListeningPeriodClosed()
4 - public:    void SLOT_MeasureInProgress()
5 - public:    void SLOT_OutOfOrder()
6 - public:    void SLOT_TimerElapsed()
7 - public:    void SLOT_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
8 - public:    void SLOT_SessionInProgress(IoSession* _pIoSessionArg)
9 - public:    void SLOT_SensorEventReceiver(SensorEvent* _pSensorEventArg)
10 - public:    void SLOT_SensorNameSet()
11 - public:    void SLOT_SensorNameUpdated()
12 - public:    void SLOT_SensorOutOfSystem()
13 - public:    void SLOT_SensorStatusUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class ThermisIo : TemperatureSensor
--- Signals:
--- Slots:
0 - public:    void SLOT_ActionFailed()
1 - public:    void SLOT_EventSubscribeUpdated()
2 - public:    void SLOT_FillSessionInfo(IoSession* _pIoSessionArg)
3 - public:    void SLOT_ListeningPeriodClosed()
4 - public:    void SLOT_MeasureInProgress()
5 - public:    void SLOT_OutOfOrder()
6 - public:    void SLOT_TimerElapsed()
7 - public:    void SLOT_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
8 - public:    void SLOT_SessionInProgress(IoSession* _pIoSessionArg)
9 - public:    void SLOT_SensorEventReceiver(SensorEvent* _pSensorEventArg)
10 - public:    void SLOT_SensorNameSet()
11 - public:    void SLOT_SensorNameUpdated()
12 - public:    void SLOT_SensorOutOfSystem()
13 - public:    void SLOT_SensorStatusUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class TemperatureCiatIo : TemperatureSensor
--- Signals:
--- Slots:
0 - public:    void SLOT_ActionFailed()
1 - public:    void SLOT_EventSubscribeUpdated()
2 - public:    void SLOT_FillSessionInfo(IoSession* _pIoSessionArg)
3 - public:    void SLOT_ListeningPeriodClosed()
4 - public:    void SLOT_MeasureInProgress()
5 - public:    void SLOT_OutOfOrder()
6 - public:    void SLOT_TimerElapsed()
7 - public:    void SLOT_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
8 - public:    void SLOT_SessionInProgress(IoSession* _pIoSessionArg)
9 - public:    void SLOT_SensorEventReceiver(SensorEvent* _pSensorEventArg)
10 - public:    void SLOT_SensorNameSet()
11 - public:    void SLOT_SensorNameUpdated()
12 - public:    void SLOT_SensorOutOfSystem()
13 - public:    void SLOT_SensorStatusUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class EolisIo : WindSensor
--- Signals:
--- Slots:
0 - public:    void SLOT_ActionFailed()
1 - public:    void SLOT_EventSubscribeUpdated()
2 - public:    void SLOT_FillSessionInfo(IoSession* _pIoSessionArg)
3 - public:    void SLOT_ListeningPeriodClosed()
4 - public:    void SLOT_MeasureInProgress()
5 - public:    void SLOT_OutOfOrder()
6 - public:    void SLOT_ObjectArrayReceiver(IoObjectsArray* _pObjectArrayArg)
7 - public:    void SLOT_TimerElapsed()
8 - public:    void SLOT_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
9 - public:    void SLOT_SessionInProgress(IoSession* _pIoSessionArg)
10 - public:    void SLOT_SensorEventReceiver(SensorEvent* _pSensorEventArg)
11 - public:    void SLOT_SensorNameSet()
12 - public:    void SLOT_SensorNameUpdated()
13 - public:    void SLOT_SensorOutOfSystem()
14 - public:    void SLOT_SensorStatusUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Eolis3DIo : LocalSensor
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LocalSensor
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoHome
--- Signals:
0 - protected: void SIGNAL_AddCompleted(TeIoHomeActionStatus eAddIoNodeStatusArg)
1 - protected: void SIGNAL_RemoveCompleted(TeIoHomeActionStatus eRemoveIoNodeStatusArg)
--- Slots:
2 - public:    void SLOT_KeyUpdateCompleted(IoNode* _pIoNodeArg, TeKeyUpdateStatus _eKeyUpdateStatusArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoHomeWithTemporaryIoKey : IoHome
--- Signals:
0 - protected: void SIGNAL_ListOfIoNodesUpdated()
--- Slots:
1 - public:    void SLOT_KeyRecoveryCompleted(IoNode* _pIoNodeArg)
2 - public:    void SLOT_KeyUpdateCompleted(IoNode* _pIoNodeArg, TeKeyUpdateStatus _eKeyUpdateStatusArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoKey
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNetwork
--- Signals:
0 - protected: void SIGNAL_HandlingSession()
1 - protected: void SIGNAL_IoNetworkTransmissionEndedWithError()
2 - protected: void SIGNAL_SessionHandlefinished()
--- Slots:
3 - public:    void AbortCurrentSession()
4 - public:    void CheckPendingSessions()
5 - public:    void HandleIoNodesSessions()
6 - public:    void SessionCompleted()
7 - public:    void SessionStatusReceived(IoProxyFrame* _pProxyFrameArg)
8 - public:    void SendStatusAck()
9 - public:    void SynchronizationCompleted()
10 - private:   void SLOT_AskForAbortCurrentSession(IoSession* _pIoSessionArg)
11 - private:   void SLOT_AskForNewSession(IoSession* _pIoSessionArg)
12 - private:   void SLOT_AskForResumeSession(IoSession* _pIoSessionArg)
13 - private:   void SLOT_ForgetThisIoNodeByActuator(IoNodeByActuator* _ioNodeArg)
14 - private:   void SLOT_ForgetThisIoNodeByController(IoNodeByController* _ioNodeArg)
15 - private:   void SLOT_ForgetThisIoNodeBySensor(IoNodeBySensor* _ioNodeArg)
16 - private:   void SLOT_ForgetThisIoNodeBySensorBox(IoNodeBySensorBox* _ioNodeArg)
17 - private:   void SLOT_ForgetThisIoNodeByBeacon(IoNodeByBeacon* _ioNodeArg)
18 - private:   void SLOT_ForgetThisIoNodeByScd(IoNodeByScd* _ioNodeArg)
19 - private:   void SLOT_RemoveThisIoNodeByActuator(IoNodeByActuator* _ioNodeArg)
20 - private:   void SLOT_ResumeSuspendedSession(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNode
--- Signals:
0 - protected: void SIGNAL_AskForNewSession(IoSession* _pSessionArg)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNodeByActuator : IoNode
--- Signals:
0 - protected: void SIGNAL_AbortCurrentSession(IoSession* _IoSessionArg)
1 - protected: void SIGNAL_SessionCompleted(IoSession* _IoSessionArg)
2 - protected: void SIGNAL_SessionInProgress(IoSession* _pIoSessionArg)
3 - protected: void SIGNAL_KeyRecoveryCompleted(IoNode* _pIoNodeArg)
4 - protected: void SIGNAL_KeyUpdateCompleted(IoNode* _pIoNode, TeKeyUpdateStatus _eStatusArg)
5 - protected: void SIGNAL_MovementInProgress()
6 - protected: void SIGNAL_NotUsedAnymore(IoNodeByActuator* _ioNodeArg)
7 - protected: void SIGNAL_RemoveThisIoNode(IoNodeByActuator* _ioNodeArg)
--- Slots:
8 - public:    void AbortCurrentSession()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNodeByBeacon : IoNode
--- Signals:
0 - protected: void SIGNAL_AbortCurrentSession(IoSession* _pSessionArg)
1 - protected: void SIGNAL_KeyUpdateCompleted(IoNode* _pIoNode, TeKeyUpdateStatus _eStatusArg)
2 - protected: void SIGNAL_NotUsedAnymore(IoNodeByBeacon* _ioNodeArg)
3 - protected: void SIGNAL_SessionCompleted(IoSession* _pIoSessionArg)
4 - protected: void SIGNAL_SessionInProgress(IoSession* _pIoSessionArg)
--- Slots:
5 - public:    void AbortCurrentSession()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNodeByController : IoNode
--- Signals:
0 - protected: void SIGNAL_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
1 - protected: void SIGNAL_SessionCompleted(IoSession* _pIoSessionArg)
2 - protected: void SIGNAL_SessionInProgress(IoSession* _pIoSessionArg)
3 - protected: void SIGNAL_KeyTransferInProgress()
4 - protected: void SIGNAL_ObjectsTransferInProgress()
5 - protected: void SIGNAL_KeyGivingRequired()
6 - protected: void SIGNAL_KeySettingCompleted()
7 - protected: void SIGNAL_KeySettingFailed()
8 - protected: void SIGNAL_KeyGettingCompleted()
9 - protected: void SIGNAL_KeyGettingFailed()
10 - protected: void SIGNAL_NotUsedAnymore(IoNodeByController* _ioNodeArg)
11 - protected: void SIGNAL_AbortCurrentSession(IoSession* _pSessionArg)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNodeByLocalController : IoNode
--- Signals:
0 - protected: void SIGNAL_AbortCurrentSession(IoSession* _ioSessionArg)
1 - protected: void SIGNAL_NewIoNode(IoNode* _pIoNodeArg)
2 - protected: void SIGNAL_DiscoverCompleted(IoNodeByLocalController::TeDiscoverResult _eDiscoverResultArg)
3 - protected: void SIGNAL_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
4 - protected: void SIGNAL_SessionCompleted(IoSession* _pIoSessionArg)
5 - protected: void SIGNAL_SessionInProgress(IoSession* _pIoSessionArg)
--- Slots:
6 - public:    void FillNodeUpdateSessionInfo(IoSession* _pIoSessionArg)
7 - public:    void NodeUpdateSessionCompleted(IoSession* _pIoSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNodeByScd : IoNode
--- Signals:
0 - protected: void SIGNAL_NotUsedAnymore(IoNodeByScd* _ioNodeArg)
--- Slots:
1 - public:    void AbortCurrentSession()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNodeBySensor : IoNode
--- Signals:
0 - protected: void SIGNAL_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
1 - protected: void SIGNAL_SessionInProgress(IoSession* _pIoSessionArg)
2 - protected: void SIGNAL_KeyTransferInProgress()
3 - protected: void SIGNAL_KeyUpdateRequired()
4 - protected: void SIGNAL_KeyGettingCompleted()
5 - protected: void SIGNAL_KeyGettingFailed()
6 - protected: void SIGNAL_KeyUpdateCompleted(IoNode* _pIoNode, IoNode* _eStatusArg)
7 - protected: void SIGNAL_ObjectsTransferInProgress()
8 - protected: void SIGNAL_NotUsedAnymore(IoNodeBySensor* _ioNodeArg)
9 - protected: void SIGNAL_AbortCurrentSession(IoSession* _pIoSessionArg)
10 - protected: void SIGNAL_SensorEventReceived(SensorEvent* _pSensorEventArg)
11 - protected: void SIGNAL_ObjectArrayReceived(IoObjectsArray* _pIoObjectArrayArg)
12 - protected: void SIGNAL_SessionCompleted(IoSession* _pIoSessionArg)
--- Slots:
13 - private:   void SLOT_EmitSignalNotUsedAnymore()
14 - private:   void SLOT_EmitSignalSensorEventReceived()
15 - private:   void SLOT_SessionCompleted()
16 - private:   void SLOT_EmitSignalKeyUpdateRequired()
17 - private:   void SLOT_EmitSignalObjectArrayReceived()
18 - private:   void SLOT_AskForKeyRecovery()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class SensorEvent
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoNodeBySensorBox : IoNode
--- Signals:
0 - protected: void SIGNAL_AbortCurrentSession(IoSession* _pSessionArg)
1 - protected: void SIGNAL_KeyTransferInProgress()
2 - protected: void SIGNAL_KeySettingCompleted()
3 - protected: void SIGNAL_KeyUpdateCompleted(IoNode* _pIoNode, TeKeyUpdateStatus _eStatusArg)
4 - protected: void SIGNAL_KeySettingFailed()
5 - protected: void SIGNAL_KeyUpdateFailed()
6 - protected: void SIGNAL_KeyUpdateRequired()
7 - protected: void SIGNAL_NotUsedAnymore(IoNodeBySensorBox* _ioNodeArg)
8 - protected: void SIGNAL_SessionCompleted(TeIoSessionStatus _IoSessionStatusArg)
9 - protected: void SIGNAL_SessionCompleted(IoSession* _IoSessionArg)
10 - protected: void SIGNAL_SessionInProgress(IoSession* _pIoSessionArg)
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoProxyFrame : ProxyFrame
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoActionStartSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoActionStatusSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoConfigurationStateSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoDeadManByIncrementSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoDiscoverNodesSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoEventReceptionSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoGetGeneralInfoSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoGetNameSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoIdentifyNodeSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoListeningSensorSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoListeningPeriodSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoKeyCheckingSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoKeyGettingSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoKeyGivingSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoKeySettingSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoKeyUpdateSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoObjectsTransferSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoObjectsTransferWithRCMSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoPriorityManagementSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadPresetPositionSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoRemovePresetPositionSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoResetActuatorSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSensorStatusSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSetGeneralInfoSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSetNameSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSettingByExplicitCommand : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSettingByStimuliSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoWritePresetPositionSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoStartInBootloaderModeSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSubscribeSensorEventSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoAutoLearningSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
2 - public:    void SLOT_WaitingTimeout()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoAutoLearningForGOSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_PollingEnded()
2 - public:    void SLOT_DelayEnded()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoComposedSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void CheckRemainingTime()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoEnterInSettingModeSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoInvertRotationSequenceSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoInvertRotationSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoActionSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
1 - protected: void SIGNAL_ActionStatusUpdated()
--- Slots:
2 - public:    void SLOT_PollingTimeout()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoMultipleSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoResetActuatorSequenceSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadjustEndLimitSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSetAutomaticEndLimitsSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSetPresetPositionSession : IoMultipleSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSetStaticEndLimitSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void StopTimeOut()
2 - public:    void TimeOut()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoUpdateIoNodeSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadListOfObjectsSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadAllObjectsInListSession : IoMultipleSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoGetInstallerInfosDataSession : IoComposedSession
--- Signals:
--- Slots:
0 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSetInstallerInfosDataSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoMemorizeReadjustmentSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoMemorizeSettingsSession : IoComposedSession
--- Signals:
--- Slots:
0 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadjustBackImpulseSession : IoComposedSession
--- Signals:
--- Slots:
0 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoUpdateActuatorDataSession : IoComposedSession
--- Signals:
--- Slots:
0 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReajustTiltingTravelSession : IoComposedSession
--- Signals:
--- Slots:
0 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadjustFlatSlatsPositionSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoValidateTiltingTravelSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoMemorizeFlatSlatsPositionSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoValidateMaximumSlatsOpeningSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoReadSettingStatusSession : IoComposedSession
--- Signals:
--- Slots:
0 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoPrepareDataSession : IoSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoPrepareDataSequenceSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_PollingTimeout()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoExecuteExplicitCommandWithPollingSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_PollingTimeout()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoSendListOfStimuliSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoValidateAutoOperatingTimeSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoGoToDownEndLimitSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_PollingEnded()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoTransferListOfObjectsSession : IoMultipleSession
--- Signals:
0 - protected: void SIGNAL_Resume(IoSession* _pIoSessionArg)
--- Slots:
1 - public:    void SLOT_Resume(IoSession* _ioSessionArg)
2 - public:    void SLOT_DelayEnded()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoValidateTiltingTravelForBridgeSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class IoIdentifyMotorTypeSession : IoComposedSession
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Building
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Floor
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class OutdoorSpace
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Residence
--- Signals:
0 - protected: void SIGNAL_AddCompleted(TeAddStatus _eStatusArg)
1 - protected: void SIGNAL_RemoveCompleted(TeRemoveStatus _eStatusArg)
2 - protected: void SIGNAL_RemoveTemporaryKeyCompleted(TeRemoveStatus _eStatusArg)
3 - protected: void SIGNAL_TemporaryIoHomeUpdated()
--- Slots:
4 - public:    void SLOT_AddIoNodeCompleted(TeIoHomeActionStatus _eStatusArg)
5 - public:    void SLOT_PutIoNodeCompleted(TeIoHomeActionStatus _eStatusArg)
6 - public:    void SLOT_RemoveIoNodeCompleted(TeIoHomeActionStatus _eStatusArg)
7 - public:    void SLOT_TemporaryIoHomeUpdated()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class Room
--- Signals:
--- Slots:
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
-------------------------------------------------
--- class LocalController
--- Signals:
0 - protected: void SIGNAL_ActionInProgress()
1 - protected: void SIGNAL_ActionStatus(LocalController::TeActionStatus eActionStatusArg)
2 - protected: void SIGNAL_IoPlugIsConnected()
3 - protected: void SIGNAL_IoPlugIsDisconnected(LocalController::TeRadioStatus eRadioStatusArg)
4 - protected: void SIGNAL_NewVirginEndProductsListChanged()
5 - protected: void SIGNAL_OneEquipmentDiscovered(qint8 nIndexArg)
6 - protected: void SIGNAL_ReadyForTransfer()
7 - protected: void SIGNAL_RemovingFile()
8 - protected: void SIGNAL_TimeOutElapsed()
--- Slots:
9 - public:    void GenerateNewKey()
10 - public:    bool Restore()
11 - public:    void Save()
12 - public:    void RestoreDebug()
13 - public:    void SaveDebug()
14 - public:    void SLOT_ActionCompleted()
15 - public:    void SLOT_ActionFailed()
16 - public:    void SLOT_ActionInProgress()
17 - public:    void SLOT_AddCompleted(TeAddStatus _eAddStatusArg)
18 - public:    void SLOT_DeleteSensorCompleted(Sensor::TeActionStatus eStatusArg)
19 - public:    void SLOT_DiscoverCompleted(IoNodeByLocalController::TeDiscoverResult eDiscoverResultArg)
20 - public:    void SLOT_EndOfReadingEquipment(TeIoSessionStatus _eIoSessionStatusArg)
21 - public:    void SLOT_EndOfInfoReadingOnEquipment()
22 - public:    void SLOT_EndOfKeyTransferToSensor()
23 - public:    void SLOT_NewIoNode(IoNode* pIoNodeArg)
24 - public:    void SLOT_ReadyForTransfer()
25 - public:    void SLOT_RemoveCompleted(TeRemoveStatus _eRemoveStatusArg)
26 - public:    void SLOT_RemoveTemporaryKeyCompleted()
27 - public:    void SLOT_SensorBoxReqCompleted()
28 - public:    void SLOT_SessionCompleted(TeIoSessionStatus IoSessionStatusArg)
29 - public:    void SLOT_SessionInProgress(IoSession* pIoSessionArg)
30 - public:    void SLOT_TemporaryIoHomeUpdated()
31 - public:    void SLOT_TimeOutElapsed()
32 - public:    void AddAController()
33 - public:    void AddThisEquipmentToMainResidence(EndProduct* pEndProductArg)
34 - public:    void CancelDiscoverNewEquipment()
35 - public:    void CancelDiscoverPrivateEquipment()
36 - public:    void CancelEquipmentTransfer()
37 - public:    void CancelKeyGiving()
38 - public:    void DeleteAnEndProduct(EndProduct* pEndProductArg)
39 - public:    void Discover2WSystem()
40 - public:    void Discover2WEquipment()
41 - public:    void Discover1WSystem()
42 - public:    void DiscoverAllSensors()
43 - public:    void DiscoverNewSystem()
44 - public:    void DiscoverSecurity()
45 - public:    void EndOfDiscovery()
46 - public:    void ExcludeThisVirginBox(Box* pBoxArg)
47 - public:    void ExcludeThisVirginEquipment(EndProduct* pEndProductArg)
48 - public:    void ExcludeThisPrivateEquipment(EndProduct* pEndProductArg)
49 - public:    void GiveKeyToController()
50 - public:    void IncludeNewVirginEquipmentList()
51 - public:    void IncludePrivateEquipmentList()
52 - public:    void IncludeVirginEquipmentList()
53 - public:    void Include1WEquipmentList()
54 - public:    void ReceiveNewKey()
55 - public:    void RemoveTemporaryKey()
56 - public:    void RemoveTemporaryKeyWhenStarting()
57 - public:    void IoPlugIsConnected()
58 - public:    void IoPlugIsDisconnected()
59 - public:    void StartInfoReadingOnListOfEndProduct(QList<EndProduct*> pListOfEndProductArg)
60 - public:    void TransferEquipmentTo2WController(QList<EndProduct*> pListOfEndProductArg)
61 - public:    void TransferEquipmentTo1WController(QList<EndProduct*> pListOfEndProductArg)
62 - public:    void UpdateKeyToEquipment()
63 - public:    void SLOT_NameUpdated()
64 - public:    void DiscoverPrivateSystem()
65 - public:    void SLOT_SoftwareVersionUpdated(TeActuatorActionStatus _eActuatorActionStatusArg)
66 - public:    void SLOT_SetTemporaryKeyAsMainKey()
67 - private:   void EmitSignalIoPlugIsDisconnectedWithRadio()
68 - private:   void EmitSignalIoPlugIsDisconnectedWithoutRadio()
--- Other Methods:
--- Properties:
--- Enums:
-------------------------------------------------
